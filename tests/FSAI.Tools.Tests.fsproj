<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <OutputType>Library</OutputType>
    <TargetFrameworks>netcoreapp2.0</TargetFrameworks>
    <RuntimeIdentifiers>win-x64;osx-x86;linux-x64</RuntimeIdentifiers>
    <RootNamespace>FSAI.Tools.Tests</RootNamespace>
    <AssemblyName>FSAI.Tools.Tests</AssemblyName>
    <IsPackable>false</IsPackable>
    <IsTestProject>true</IsTestProject>
    <TreatWarningsAsErrors>true</TreatWarningsAsErrors>
    <PlatformTarget>x64</PlatformTarget>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="LibTorch.Redist" Version="0.2.0-preview-27915-4" />
    <PackageReference Include="SciSharp.TensorFlow.Redist" Version="1.14.1" />
    <PackageReference Include="SharpZipLib" Version="1.1.0" />
    <PackageReference Include="Torch.NET" Version="3.7.1.1" />
    <PackageReference Include="TorchSharp" Version="0.2.0-preview-27915-4" />
    <PackageReference Update="FSharp.Core" Version="4.6.2" />
    <PackageReference Update="System.ValueTuple" Version="4.5.0" />
    <PackageReference Include="System.IO.Compression" Version="4.3.0" />
    <PackageReference Include="Microsoft.NET.Test.Sdk" Version="16.1.0" />
    <PackageReference Include="NUnit3TestAdapter" Version="3.13.0" />
    <PackageReference Include="NUnit" Version="3.12.0" />
    <PackageReference Include="Argu" Version="5.5.0" />
    <PackageReference Include="Microsoft.Extensions.DependencyInjection" Version="2.2.0" />
  </ItemGroup> 

  <ItemGroup>
    <Compile Include="Utils.fs" />
    <Compile Include="Data.MNist.fs" />
    <Compile Include="TF.VGGStyleTransfer.fs" />
    <Compile Include="TF.ResNet50Classifier.fs" />
    <Compile Include="TF.Tests.fs" />
    <Compile Include="DSL.VGGStyleTransfer.fs" />
    <Compile Include="DSL.Tests.fs" />
    <None Include="..\examples\ImageClassifier.fsx" />
    <None Include="..\examples\NeuralStyleTransfer.fsx" />
    <None Include="..\examples\NeuralStyleTransfer-dsl.fsx" />
    <None Include="..\examples\dsl-live.fsx" />
    <None Include="..\examples\TorchSharp.MNist.fsx" />
    <None Include="..\examples\TF.MNist.fsx" />
  </ItemGroup>
  <Target Name="Debug">
    <Message Importance="High" Text="Hello World" />
    
    <Message Text="RuntimeIdentifier = $(RuntimeIdentifier)" Importance="high" />
    <Message Text="IsOsPlatform = $([System.Runtime.InteropServices.RuntimeInformation]::IsOSPlatform($([System.Runtime.InteropServices.OSPlatform]::Linux)))" Importance="high" />
      <Message Text="PlatformTarget = $(PlatformTarget)" Importance="high" />
      <Message Text="PlatformTarget = $(PlatformTarget)" Importance="high" />
      <Message Text="TargetFramework = $(TargetFramework)" Importance="high" />
      <Message Text="NuGetPackageRoot = $(NuGetPackageRoot)" Importance="high" />
      <Message Text="ExcludeRestorePackageImports = $(ExcludeRestorePackageImports)" Importance="high" />
      <Message Text="Project File Name = $(MSBuildProjectFile)" Importance="high" />
      <Message Text="Project Extension = $(MSBuildProjectExtension)" Importance="high" />
   
  </Target>
 <ItemGroup>
    <ProjectReference Include="..\src\FSAI.Tools\FSAI.Tools.fsproj" />
  </ItemGroup>

  <ItemGroup Condition=" '$(OS)' == 'Windows_NT' ">
    <Content Include="$(NuGetPackageRoot)torchsharp\0.2.0-preview-27915-4\runtimes\win-x64\native\LibTorchSharp.dll" Condition="'$(PlatformTarget)' == 'x64'">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      <Visible>false</Visible>
      <Link>%(Filename)%(Extension)</Link>
    </Content>
    <Content Include="$(NuGetPackageRoot)libtorch.redist\0.2.0-preview-27915-4\runtimes\win-x64\native\*.dll" Condition="'$(PlatformTarget)' == 'x64'">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      <Visible>false</Visible>
      <Link>%(Filename)%(Extension)</Link>
    </Content>
    <Content Include="$(NuGetPackageRoot)scisharp.tensorflow.redist\1.14.0\runtimes\win-x64\native\*.dll" Condition="'$(PlatformTarget)' == 'x64'">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      <Visible>false</Visible>
      <Link>%(Filename)%(Extension)</Link>
    </Content>
  </ItemGroup>
  <ItemGroup Condition=" '$([System.Runtime.InteropServices.RuntimeInformation]::IsOSPlatform($([System.Runtime.InteropServices.OSPlatform]::Linux)))' ">
    <Content Include="$(NuGetPackageRoot)torchsharp\0.2.0-preview-27915-4\runtimes\linux-x64\native\LibTorchSharp.so" Condition="'$(PlatformTarget)' == 'x64'">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      <Visible>false</Visible>
      <Link>%(Filename)%(Extension)</Link>
    </Content>
    <Content Include="$(NuGetPackageRoot)libtorch.redist\0.2.0-preview-27915-4\runtimes\linux-x64\native\*" Condition="'$(PlatformTarget)' == 'x64'">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      <Visible>false</Visible>
      <Link>%(Filename)%(Extension)</Link>
    </Content>
    <Content Include="$(NuGetPackageRoot)scisharp.tensorflow.redist\1.14.0\runtimes\linux-x64\native\*" Condition="'$(PlatformTarget)' == 'x64'">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      <Visible>false</Visible>
      <Link>%(Filename)%(Extension)</Link>
    </Content>
  </ItemGroup>
  <ItemGroup Condition=" '$([System.Runtime.InteropServices.RuntimeInformation]::IsOSPlatform($([System.Runtime.InteropServices.OSPlatform]::OSX)))' ">
    <Content Include="$(NuGetPackageRoot)torchsharp\0.2.0-preview-27915-4\runtimes\osx-x64\native\LibTorchSharp.dylib" Condition="'$(PlatformTarget)' == 'x64'">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      <Visible>false</Visible>
      <Link>%(Filename)%(Extension)</Link>
    </Content>
    <Content Include="$(NuGetPackageRoot)libtorch.redist\0.2.0-preview-27915-4\runtimes\osx-x64\native\*.dylib" Condition="'$(PlatformTarget)' == 'x64'">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      <Visible>false</Visible>
      <Link>%(Filename)%(Extension)</Link>
    </Content>
    <Content Include="$(NuGetPackageRoot)scisharp.tensorflow.redist\1.14.0\runtimes\osx-x64\native\*.dylib" Condition="'$(PlatformTarget)' == 'x64'">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      <Visible>false</Visible>
      <Link>%(Filename)%(Extension)</Link>
    </Content>
  </ItemGroup>
</Project>
